Index: app/src/main/java/com/example/taxilink/Database/CustomerDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.taxilink.Database;\r\n\r\npublic class CustomerDB {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/taxilink/Database/CustomerDB.java b/app/src/main/java/com/example/taxilink/Database/CustomerDB.java
--- a/app/src/main/java/com/example/taxilink/Database/CustomerDB.java	
+++ b/app/src/main/java/com/example/taxilink/Database/CustomerDB.java	
@@ -1,4 +1,39 @@
 package com.example.taxilink.Database;
 
+import com.example.taxilink.EncryptionController.DataEncryption;
+import com.example.taxilink.EncryptionController.RSAEncryption.RSA;
+
+import java.io.File;
+import java.util.ArrayList;
+
 public class CustomerDB {
+    private DataEncryption encryption = new RSA();
+    private ArrayList<String> attributes = new ArrayList<String>();
+    private ArrayList<String> custIDs = new ArrayList<String>();
+    private File db;
+
+    public static void insert(String attrID, String custID) {
+
+    }
+
+    public static void delete(String attrID, String custID) {
+
+    }
+
+    public static void update(String attrID, String custID) {
+
+    }
+
+    public static ArrayList<String> acquire(String attrID, String custID) {
+        return new ArrayList<String>();
+    }
+
+    private void addAttr(String attrID) {
+
+    }
+
+    private void removeAttr(String attrID) {
+
+    }
+
 }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id \"androidx.navigation.safeargs\"\r\n}\r\n\r\napply plugin: 'androidx.navigation.safeargs'\r\n\r\nandroid {\r\n    namespace 'com.example.taxilink'\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.taxilink\"\r\n        minSdk 24\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.8.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'androidx.navigation:navigation-fragment:2.5.3'\r\n    implementation 'androidx.navigation:navigation-ui:2.5.3'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -11,7 +11,7 @@
 
     defaultConfig {
         applicationId "com.example.taxilink"
-        minSdk 24
+        minSdk 26
         targetSdk 33
         versionCode 1
         versionName "1.0"
Index: app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption.java
===================================================================
diff --git a/app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption.java b/app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption.java
deleted file mode 100644
--- a/app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption.java	
+++ /dev/null	
@@ -1,29 +0,0 @@
-package com.example.taxilink.EncryptionController;
-
-import java.io.File;
-import java.util.ArrayList;
-
-public class RSAEncryption implements DataEncryption{
-    private Integer prvKey;
-    private Integer pubKey;
-    private File keyFile;
-
-    @Override
-    public ArrayList<String> encrypt(ArrayList<String> data) {
-        return null;
-    }
-
-    @Override
-    public ArrayList<String> decrypt(ArrayList<String> data) {
-        return null;
-    }
-
-    private ArrayList<String> formatData(String data) {
-        return null;
-    }
-
-    private void generateKeys() {
-
-    }
-
-}
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>*.iml\r\n.gradle\r\n/local.properties\r\n/.idea/caches\r\n/.idea/libraries\r\n/.idea/modules.xml\r\n/.idea/workspace.xml\r\n/.idea/navEditor.xml\r\n/.idea/assetWizardSettings.xml\r\n.DS_Store\r\n/build\r\n/captures\r\n.externalNativeBuild\r\n.cxx\r\nlocal.properties\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	
+++ b/.gitignore	
@@ -12,4 +12,4 @@
 /captures
 .externalNativeBuild
 .cxx
-local.properties
+local.properties
\ No newline at end of file
Index: app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption/RSA.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption/RSA.java b/app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption/RSA.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/taxilink/EncryptionController/RSAEncryption/RSA.java	
@@ -0,0 +1,197 @@
+package com.example.taxilink.EncryptionController.RSAEncryption;
+
+import com.example.taxilink.EncryptionController.DataEncryption;
+
+import java.io.IOException;
+import java.math.BigInteger;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+
+import static java.nio.file.Files.readAllLines;
+import static java.nio.file.Files.walkFileTree;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.ThreadLocalRandom;
+
+public class RSA implements DataEncryption {
+    private BigInteger prvKey;
+    private BigInteger pubKey;
+    private final Path keyFile = Paths.get("com/example/taxilink/EncryptionController/RSAEncryption/primes.txt");
+
+    @Override
+    public ArrayList<String> encrypt(ArrayList<String> data) {
+        return null;
+    }
+
+    @Override
+    public ArrayList<String> decrypt(ArrayList<String> data) {
+        return null;
+    }
+
+    private ArrayList<String> formatData(String data) {
+        return null;
+    }
+
+    private void generateKeys() throws IOException {
+        long f_len = Files.lines(keyFile).count();
+        List<String> primes = readAllLines(keyFile);
+        int l1, l2;
+        BigInteger prime1, prime2;
+        l1 = randInt(0, (int) f_len);
+        do {
+            l2 = randInt(0, (int) f_len);
+        }
+        while (l2 == l1);
+        prime1 = new BigInteger(primes.get(l1));
+        prime2 = new BigInteger(primes.get(l2));
+
+        BigInteger n = prime1.multiply(prime2);
+        BigInteger fi = (prime1.subtract(BigInteger.valueOf(1))).multiply(prime2.subtract(BigInteger.valueOf(1)));
+        long e = 2;
+        long d = 2;
+        while (!fi.gcd(BigInteger.valueOf(e)).equals(BigInteger.valueOf(1))) {
+            e++;
+        }
+        pubKey = BigInteger.valueOf(e);
+        while (!(fi.mod(BigInteger.valueOf(d * e))).equals(BigInteger.valueOf(1))) {
+            d++;
+        }
+        prvKey = BigInteger.valueOf(d);
+    }
+
+    private int randInt(int min, int max) {
+        return ThreadLocalRandom.current().nextInt(min, (max + 1));
+    }
+
+}
+
+class Encoder {
+    private:
+    vector<int> prime;
+    int pub;
+    int prv;
+    int n;
+
+    void sieve_primes();
+
+    void keys();
+
+    int choose();
+
+    vector<ll> rsa(const string &message);
+
+    public:
+
+    vector<string> encrypted(const vector<string> &info);
+};
+
+void Encoder::sieve_primes(){
+        ll num_primes=50000;
+        vector<bool> sieve(num_primes,true);
+        sieve[0]=false;
+        sieve[1]=false;
+        int p=2;
+        while(p*p<=num_primes){
+        if(sieve[p]){
+        for(int i=p*p;i<=num_primes;i+=p){
+        sieve[i]=false;
+        }
+        }
+        p+=1;
+        }
+        for(int i=0;i<sieve.size();i++){
+        if(sieve[i])
+        prime.push_back(i);
+        }
+        }
+
+        int Encoder::choose(){
+        srand(time(nullptr));
+        auto k=rand()%prime.size();
+        auto it=prime.begin();
+        while(k--)
+        it++;
+        int ret=*it;
+        prime.erase(it);
+        return ret;
+        }
+
+        void Encoder::keys(){
+        int prime1=choose(); // first prime number
+        int prime2=choose(); // second prime number
+        n=prime1*prime2;
+        int fi=(prime1-1)*(prime2-1);
+        int e=2;
+        while(true){
+        if(__gcd(e,fi)==1)
+        break;
+        e++;
+        } // d = (k*Î¦(n) + 1) / e for some integer k
+        pub=e;
+        int d=2;
+        while(true){
+        if((d*e)%fi==1)
+        break;
+        d++;
+        }
+        prv=d;
+        }
+
+
+// first converting each character to its ASCII value and
+// then encoding it then decoding the number to get the
+// ASCII and converting it to character
+        vector<ll> Encoder::rsa(const string&message){
+        vector<ll> form;
+        // calling the encrypting function in encoding function
+        for(auto&letter:message){
+        int e=pub;
+        ll encrypted_text=1;
+        while(e--){
+        encrypted_text*=(ll)letter;
+        encrypted_text%=n;
+        }
+        form.push_back(encrypted_text);
+        }
+        return form;
+        }
+
+
+        vector<string> Encoder::encrypted(const vector<string> &info){
+        sieve_primes();
+        keys();
+        vector<string> text;
+        vector<vector<ll>>en;
+        for(const auto&i:info){
+        vector<ll> coded=rsa(i);
+        en.push_back(coded);
+        string x_str;
+        for(auto&p:coded)
+        x_str+=to_string(p);
+        cout<<x_str<<"\n\n";
+        text.push_back(x_str);
+        }
+        text.push_back(to_string(prv));
+        cout<<prv<<endl;
+        return text;
+        }
+
+        ll decrypt(int encrypted_text){
+        int d=prv;
+        ll decrypted=1;
+        while(d--){
+        decrypted*=encrypted_text;
+        decrypted%=n;
+        }
+        return decrypted;
+        }
+
+        string decoder(const vector<int>&encoded){
+        string s;
+        // calling the decrypting function decoding function
+        for(auto&num:encoded)
+        s+=decrypt(num);
+        return s;
+        }
Index: .idea/csv-plugin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/csv-plugin.xml b/.idea/csv-plugin.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/csv-plugin.xml	
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CsvFileAttributes">
+    <option name="attributeMap">
+      <map>
+        <entry key="\app\src\main\java\com\example\taxilink\Database\CustomerDB.csv">
+          <value>
+            <Attribute>
+              <option name="separator" value="," />
+            </Attribute>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
